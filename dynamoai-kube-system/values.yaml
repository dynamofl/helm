# Default values for dynamoai-kube-system.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Default values for aws-ebs-csi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
k8Infra:
  subnetAzs:
    - us-west-2a
    - us-west-2b
    - us-west-2c
  privateSubnetIds:
    - subnet-12345678
    - subnet-23456789
    - subnet-34567890
  secondaryPrivateSubnetIds:
    - subnet-87654321
    - subnet-76543210
    - subnet-65432109
  clusterSecurityGroupId: sg-0123456789abcdef0
  

awsEbsCsiDriver:
  enabled: true
  image:
    repository: public.ecr.aws/ebs-csi-driver/aws-ebs-csi-driver
    # Overrides the image tag whose default is v{{ .Chart.AppVersion }}
    tag: ""
    pullPolicy: IfNotPresent

  # -- Custom labels to add into metadata
  customLabels:
    {}
    # k8s-app: aws-ebs-csi-driver

  sidecars:
    provisioner:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/external-provisioner
        tag: "v4.0.1-eks-1-30-2"
      logLevel: 2
      # Additional parameters provided by external-provisioner.
      additionalArgs: []
      # Grant additional permissions to external-provisioner
      additionalClusterRoleRules:
      resources: {}
      # Tune leader lease election for csi-provisioner.
      # Leader election is on by default.
      leaderElection:
        enabled: true
        # Optional values to tune lease behavior.
        # The arguments provided must be in an acceptable time.ParseDuration format.
        # Ref: https://pkg.go.dev/flag#Duration
        # leaseDuration: "15s"
        # renewDeadline: "10s"
        # retryPeriod: "5s"
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    attacher:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/external-attacher
        tag: "v4.5.1-eks-1-30-2"
      # Tune leader lease election for csi-attacher.
      # Leader election is on by default.
      leaderElection:
        enabled: true
        # Optional values to tune lease behavior.
        # The arguments provided must be in an acceptable time.ParseDuration format.
        # Ref: https://pkg.go.dev/flag#Duration
        # leaseDuration: "15s"
        # renewDeadline: "10s"
        # retryPeriod: "5s"
      logLevel: 2
      # Additional parameters provided by external-attacher.
      additionalArgs: []
      # Grant additional permissions to external-attacher
      additionalClusterRoleRules: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    snapshotter:
      # Enables the snapshotter sidecar even if the snapshot CRDs are not installed
      forceEnable: false
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/external-snapshotter/csi-snapshotter
        tag: "v7.0.2-eks-1-30-2"
      logLevel: 2
      # Additional parameters provided by csi-snapshotter.
      additionalArgs: []
      # Grant additional permissions to csi-snapshotter
      additionalClusterRoleRules: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    livenessProbe:
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/livenessprobe
        tag: "v2.12.0-eks-1-30-2"
      # Additional parameters provided by livenessprobe.
      additionalArgs: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    resizer:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/external-resizer
        tag: "v1.10.1-eks-1-30-2"
      # Tune leader lease election for csi-resizer.
      # Leader election is on by default.
      leaderElection:
        enabled: true
        # Optional values to tune lease behavior.
        # The arguments provided must be in an acceptable time.ParseDuration format.
        # Ref: https://pkg.go.dev/flag#Duration
        # leaseDuration: "15s"
        # renewDeadline: "10s"
        # retryPeriod: "5s"
      logLevel: 2
      # Additional parameters provided by external-resizer.
      additionalArgs: []
      # Grant additional permissions to external-resizer
      additionalClusterRoleRules: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    nodeDriverRegistrar:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/node-driver-registrar
        tag: "v2.10.1-eks-1-30-2"
      logLevel: 2
      # Additional parameters provided by node-driver-registrar.
      additionalArgs: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        initialDelaySeconds: 30
        periodSeconds: 90
        timeoutSeconds: 15
    volumemodifier:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/ebs-csi-driver/volume-modifier-for-k8s
        tag: "v0.3.0"
      leaderElection:
        enabled: true
        # Optional values to tune lease behavior.
        # The arguments provided must be in an acceptable time.ParseDuration format.
        # Ref: https://pkg.go.dev/flag#Duration
        # leaseDuration: "15s"
        # renewDeadline: "10s"
        # retryPeriod: "5s"
      logLevel: 2
      # Additional parameters provided by volume-modifier-for-k8s.
      additionalArgs: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false

  proxy:
    http_proxy:
    no_proxy:

  imagePullSecrets: []
  nameOverride:
  fullnameOverride:

  awsAccessSecret:
    name: aws-secret
    keyId: key_id
    accessKey: access_key

  controller:
    batching: true
    volumeModificationFeature:
      enabled: false
    # Additional parameters provided by aws-ebs-csi-driver controller.
    additionalArgs: []
    sdkDebugLog: false
    loggingFormat: text
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
              - fargate
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ebs-csi-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    # The default filesystem type of the volume to provision when fstype is unspecified in the StorageClass.
    # If the default is not set and fstype is unset in the StorageClass, then no fstype will be set
    defaultFsType: ext4
    env: []
    # Use envFrom to reference ConfigMaps and Secrets across all containers in the deployment
    envFrom: []
    # If set, add pv/pvc metadata to plugin create requests as parameters.
    extraCreateMetadata: true
    # Extra volume tags to attach to each dynamically provisioned volume.
    # ---
    # extraVolumeTags:
    #   key1: value1
    #   key2: value2
    extraVolumeTags: {}
    httpEndpoint:
    # (deprecated) The TCP network address where the prometheus metrics endpoint
    # will run (example: `:8080` which corresponds to port 8080 on local host).
    # The default is empty string, which means metrics endpoint is disabled.
    # ---
    enableMetrics: false
    serviceMonitor:
      # Enables the ServiceMonitor resource even if the prometheus-operator CRDs are not installed
      forceEnable: false
      # Additional labels for ServiceMonitor object
      labels:
        release: prometheus
      interval: "15s"
    # If set to true, AWS API call metrics will be exported to the following
    # TCP endpoint: "0.0.0.0:3301"
    # ---
    # ID of the Kubernetes cluster used for tagging provisioned EBS volumes (optional).
    k8sTagClusterId:
    logLevel: 2
    userAgentExtra: "helm"
    nodeSelector: {}
    deploymentAnnotations: {}
    podAnnotations: {}
    podLabels: {}
    priorityClassName: system-cluster-critical
    # AWS region to use. If not specified then the region will be looked up via the AWS EC2 metadata
    # service.
    # ---
    # region: us-east-1
    region:
    replicaCount: 2
    revisionHistoryLimit: 10
    socketDirVolume:
      emptyDir: {}
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 0
    #   maxUnavailable: 1
    resources:
      requests:
        cpu: 10m
        memory: 40Mi
      limits:
        memory: 256Mi
    serviceAccount:
    # A service account will be created for you if set to true. Set to false if you want to use your own.
      create: true
      name: ebs-csi-controller-sa
      annotations: {}
      ## Enable if EKS IAM for SA is used
      # eks.amazonaws.com/role-arn: arn:<partition>:iam::<account>:role/ebs-csi-role
      automountServiceAccountToken: true
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
        tolerationSeconds: 300
    # TSCs without the label selector stanza
    #
    # Example:
    #
    # topologySpreadConstraints:
    #  - maxSkew: 1
    #    topologyKey: topology.kubernetes.io/zone
    #    whenUnsatisfiable: ScheduleAnyway
    #  - maxSkew: 1
    #    topologyKey: kubernetes.io/hostname
    #    whenUnsatisfiable: ScheduleAnyway
    topologySpreadConstraints: []
    # securityContext on the controller pod
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
    # Add additional volume mounts on the controller with controller.volumes and controller.volumeMounts
    volumes: []
    # Add additional volumes to be mounted onto the controller:
    # - name: custom-dir
    #   hostPath:
    #     path: /path/to/dir
    #     type: Directory
    volumeMounts: []
    # And add mount paths for those additional volumes:
    # - name: custom-dir
    #   mountPath: /mount/path
    # ---
    # securityContext on the controller container (see sidecars for securityContext on sidecar containers)
    containerSecurityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    initContainers: []
    # containers to be run before the controller's container starts.
    #
    # Example:
    #
    # - name: wait
    #   image: busybox
    #   command: [ 'sh', '-c', "sleep 20" ]
    # Enable opentelemetry tracing for the plugin running on the daemonset
    otelTracing: {}
    #  otelServiceName: ebs-csi-controller
    #  otelExporterEndpoint: "http://localhost:4317"

  node:
    env: []
    envFrom: []
    kubeletPath: /var/lib/kubelet
    loggingFormat: text
    logLevel: 2
    priorityClassName:
    additionalArgs: []
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
              - fargate
            - key: node.kubernetes.io/instance-type
              operator: NotIn
              values:
              - a1.medium
              - a1.large
              - a1.xlarge
              - a1.2xlarge
              - a1.4xlarge
    nodeSelector: {}
    daemonSetAnnotations: {}
    podAnnotations: {}
    podLabels: {}
    tolerateAllTaints: true
    tolerations:
    - operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    resources:
      requests:
        cpu: 10m
        memory: 40Mi
      limits:
        memory: 256Mi
    revisionHistoryLimit: 10
    probeDirVolume:
      emptyDir: {}
    serviceAccount:
      create: true
      name: ebs-csi-node-sa
      annotations: {}
      ## Enable if EKS IAM for SA is used
      # eks.amazonaws.com/role-arn: arn:<partition>:iam::<account>:role/ebs-csi-role
      automountServiceAccountToken: true
    # Enable the linux daemonset creation
    enableLinux: true
    enableWindows: false
    # The number of attachment slots to reserve for system use (and not to be used for CSI volumes)
    # When this parameter is not specified (or set to -1), the EBS CSI Driver will attempt to determine the number of reserved slots via heuristic
    # Cannot be specified at the same time as `node.volumeAttachLimit`
    reservedVolumeAttachments:
    # The "maximum number of attachable volumes" per node
    # Cannot be specified at the same time as `node.reservedVolumeAttachments`
    volumeAttachLimit:
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: "10%"
    hostNetwork: false
    # securityContext on the node pod
    securityContext:
      # The node pod must be run as root to bind to the registration/driver sockets
      runAsNonRoot: false
      runAsUser: 0
      runAsGroup: 0
      fsGroup: 0
    # Add additional volume mounts on the node pods with node.volumes and node.volumeMounts
    volumes: []
    # Add additional volumes to be mounted onto the node pods:
    # - name: custom-dir
    #   hostPath:
    #     path: /path/to/dir
    #     type: Directory
    volumeMounts: []
    # And add mount paths for those additional volumes:
    # - name: custom-dir
    #   mountPath: /mount/path
    # ---
    # securityContext on the node container (see sidecars for securityContext on sidecar containers)
    containerSecurityContext:
      readOnlyRootFilesystem: true
      privileged: true
    # Enable opentelemetry tracing for the plugin running on the daemonset
    otelTracing: {}
    #  otelServiceName: ebs-csi-node
    #  otelExporterEndpoint: "http://localhost:4317"

  additionalDaemonSets:
    # Additional node DaemonSets, using the node config structure
    # See docs/additional-daemonsets.md for more information
    #
    # example:
    #   nodeSelector:
    #     node.kubernetes.io/instance-type: c5.large
    #   volumeAttachLimit: 15

  # Enable compatibility for the A1 instance family via use of an AL2-based image in a separate DaemonSet
  # a1CompatibilityDaemonSet: true

  storageClasses: []
  # Add StorageClass resources like:
  # - name: ebs-sc
  #   # annotation metadata
  #   annotations:
  #     storageclass.kubernetes.io/is-default-class: "true"
  #   # label metadata
  #   labels:
  #     my-label-is: supercool
  #   # defaults to WaitForFirstConsumer
  #   volumeBindingMode: WaitForFirstConsumer
  #   # defaults to Delete
  #   reclaimPolicy: Retain
  #   parameters:
  #     encrypted: "true"

  volumeSnapshotClasses: []
  # Add VolumeSnapshotClass resources like:
  # - name: ebs-vsc
  #   # annotation metadata
  #   annotations:
  #     snapshot.storage.kubernetes.io/is-default-class: "true"
  #   # label metadata
  #   labels:
  #     my-label-is: supercool
  #   # deletionPolicy must be specified
  #   deletionPolicy: Delete
  #   parameters:

  # Use old CSIDriver without an fsGroupPolicy set
  # Intended for use with older clusters that cannot easily replace the CSIDriver object
  # This parameter should always be false for new installations
  useOldCSIDriver: false

  helmTester:
    enabled: true
    # Supply a custom image to the ebs-csi-driver-test pod in helm-tester.yaml
    image: "gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240311-b09cdeb92c-master"


aws-vpc-cni:
  enabled: true
  # Default values for aws-vpc-cni.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  # This default name override is to maintain backwards compatability with
  # existing naming
  nameOverride: aws-node

  init:
    image:
      tag: v1.18.1
      domain: amazonaws.com
      region: us-west-2
      endpoint: ecr
      account: "602401143452"
      pullPolicy: Always
      # Set to use custom image
      override:
      # override: "repo/org/image:tag"
    env:
      DISABLE_TCP_EARLY_DEMUX: "false"
      ENABLE_IPv6: "false"
    securityContext:
      privileged: true
    resources: {}

  nodeAgent:
    enabled: true
    image:
      tag: v1.1.1
      domain: amazonaws.com
      region: us-west-2
      endpoint: ecr
      account: "602401143452"
      pullPolicy: Always
      # Set to use custom image
      override:
      # override: "repo/org/image:tag"
    securityContext:
      capabilities:
        add:
        - "NET_ADMIN"
      privileged: true
    enableCloudWatchLogs: "false"
    enablePolicyEventLogs: "false"
    enableIpv6: "false"
    metricsBindAddr: "8162"
    healthProbeBindAddr: "8163"
    conntrackCacheCleanupPeriod: 300
    resources: {}

  image:
    tag: v1.18.1
    domain: amazonaws.com
    region: us-west-2
    endpoint: ecr
    account: "602401143452"
    pullPolicy: Always
    # Set to use custom image
    override:
    # override: "repo/org/image:tag"

  # The CNI supports a number of environment variable settings
  # See https://github.com/aws/amazon-vpc-cni-k8s#cni-configuration-variables
  env:
    ADDITIONAL_ENI_TAGS: "{}"
    AWS_VPC_CNI_NODE_PORT_SUPPORT: "true"
    AWS_VPC_ENI_MTU: "9001"
    AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG: "true"
    AWS_VPC_K8S_CNI_EXTERNALSNAT: "false"
    AWS_VPC_K8S_CNI_LOG_FILE: "/host/var/log/aws-routed-eni/ipamd.log"
    AWS_VPC_K8S_CNI_LOGLEVEL: DEBUG
    AWS_VPC_K8S_CNI_RANDOMIZESNAT: "prng"
    AWS_VPC_K8S_CNI_VETHPREFIX: eni
    AWS_VPC_K8S_PLUGIN_LOG_FILE: "/var/log/aws-routed-eni/plugin.log"
    AWS_VPC_K8S_PLUGIN_LOG_LEVEL: DEBUG
    DISABLE_INTROSPECTION: "false"
    DISABLE_METRICS: "false"
    ENABLE_POD_ENI: "false"
    ENABLE_PREFIX_DELEGATION: "false"
    WARM_ENI_TARGET: "1"
    WARM_PREFIX_TARGET: "1"
    DISABLE_NETWORK_RESOURCE_PROVISIONING: "false"
    ENABLE_IPv4: "true"
    ENABLE_IPv6: "false"
    VPC_CNI_VERSION: "v1.18.1"
    NETWORK_POLICY_ENFORCING_MODE: "standard"
    ENABLE_SUBNET_DISCOVERY: "true"
    ENI_CONFIG_LABEL_DEF: "topology.kubernetes.io/zone"

  # this flag enables you to use the match label that was present in the original daemonset deployed by EKS
  # You can then annotate and label the original aws-node resources and 'adopt' them into a helm release
  originalMatchLabels: false

  # Settings for aws-vpc-cni ConfigMap
  # - Network Policy settings
  enableNetworkPolicy: "false"
  # - Windows settings
  enableWindowsIpam: "false"
  # - Windows Prefix Delegation settings
  enableWindowsPrefixDelegation: "false"
  warmWindowsPrefixTarget: 0
  warmWindowsIPTarget: 1
  minimumWindowsIPTarget: 3
  # - Security Groups for Pods settings
  branchENICooldown: 60

  cniConfig:
    enabled: false
    fileContents: ""

  imagePullSecrets: []

  fullnameOverride: "aws-node"

  priorityClassName: system-node-critical

  podSecurityContext: {}

  podAnnotations: {}

  podLabels: {}

  securityContext:
    capabilities:
      add:
      - "NET_ADMIN"
      - "NET_RAW"

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
    annotations: {}
      # To set annotations - serviceAccount.annotations."eks\.amazonaws\.com/role-arn"=arn:aws:iam::<AWS_ACCOUNT_ID>:<IAM_ROLE_NAME>

  livenessProbe:
    exec:
      command:
        - /app/grpc-health-probe
        - '-addr=:50051'
        - '-connect-timeout=5s'
        - '-rpc-timeout=5s'
    initialDelaySeconds: 60

  livenessProbeTimeoutSeconds: 10

  readinessProbe:
    exec:
      command:
        - /app/grpc-health-probe
        - '-addr=:50051'
        - '-connect-timeout=5s'
        - '-rpc-timeout=5s'
    initialDelaySeconds: 1

  readinessProbeTimeoutSeconds: 10

  resources:
    requests:
      cpu: 25m

  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "10%"

  nodeSelector: {}

  tolerations:
    - operator: Exists

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: "kubernetes.io/os"
                operator: In
                values:
                  - linux
              - key: "kubernetes.io/arch"
                operator: In
                values:
                  - amd64
                  - arm64
              - key: "eks.amazonaws.com/compute-type"
                operator: NotIn
                values:
                  - fargate

  eniConfig:
    # Specifies whether ENIConfigs should be created
    create: false
    region: us-west-2
    subnets:
      # Key identifies the AZ
      # Value contains the subnet ID and security group IDs within that AZ
      # us-west-2a:
      #   id: subnet-123
      #   securityGroups:
      #   - sg-123
      # us-west-2b:
      #   id: subnet-456
      #   securityGroups:
      #   - sg-456
      # us-west-2c:
      #   id: subnet-789
      #   securityGroups:
      #   - sg-789

karpenter:
  # -- Overrides the chart's name.
  nameOverride: ""
  # -- Overrides the chart's computed fullname.
  fullnameOverride: ""
  # -- Additional labels to add into metadata.
  additionalLabels: {}
  # app: karpenter

  # -- Additional annotations to add into metadata.
  additionalAnnotations: {}
  # -- Image pull policy for Docker images.
  imagePullPolicy: IfNotPresent
  # -- Image pull secrets for Docker images.
  imagePullSecrets: []
  serviceAccount:
    # -- Specifies if a ServiceAccount should be created.
    create: true
    # -- The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template.
    name: ""
    # -- Additional annotations for the ServiceAccount.
    annotations: {}
  # -- Specifies additional rules for the core ClusterRole.
  additionalClusterRoleRules: []
  serviceMonitor:
    # -- Specifies whether a ServiceMonitor should be created.
    enabled: false
    # -- Additional labels for the ServiceMonitor.
    additionalLabels: {}
    # -- Configuration on `http-metrics` endpoint for the ServiceMonitor. 
    # Not to be used to add additional endpoints. 
    # See the Prometheus operator documentation for configurable fields https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint
    endpointConfig: {}
  # -- Number of replicas.
  replicas: 2
  # -- The number of old ReplicaSets to retain to allow rollback.
  revisionHistoryLimit: 10
  # -- Strategy for updating the pod.
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  # -- Additional labels for the pod.
  podLabels: {}
  # -- Additional annotations for the pod.
  podAnnotations: {}
  podDisruptionBudget:
    name: karpenter
    maxUnavailable: 1
  # -- SecurityContext for the pod.
  podSecurityContext:
    fsGroup: 65532
  # -- PriorityClass name for the pod.
  priorityClassName: system-cluster-critical
  # -- Override the default termination grace period for the pod.
  terminationGracePeriodSeconds:
  # -- Bind the pod to the host network.
  # This is required when using a custom CNI.
  hostNetwork: false
  # -- Configure the DNS Policy for the pod
  dnsPolicy: ClusterFirst
  # -- Configure DNS Config for the pod
  dnsConfig: {}
  #  options:
  #    - name: ndots
  #      value: "1"
  # -- Node selectors to schedule the pod to nodes with labels.
  nodeSelector:
    kubernetes.io/os: linux
  # -- Affinity rules for scheduling the pod. If an explicit label selector is not provided for pod affinity or pod anti-affinity one will be created from the pod selector labels.
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/nodepool
                operator: DoesNotExist
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: "kubernetes.io/hostname"
  # -- Topology spread constraints to increase the controller resilience by distributing pods across the cluster zones. If an explicit label selector is not provided one will be created from the pod selector labels.
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
  # -- Tolerations to allow the pod to be scheduled to nodes with taints.
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
  # -- Additional volumes for the pod.
  extraVolumes: []
  # - name: aws-iam-token
  #   projected:
  #     defaultMode: 420
  #     sources:
  #     - serviceAccountToken:
  #         audience: sts.amazonaws.com
  #         expirationSeconds: 86400
  #         path: token
  controller:
    image:
      # -- Repository path to the controller image.
      repository: public.ecr.aws/karpenter/controller
      # -- Tag of the controller image.
      tag: 0.36.0
      # -- SHA256 digest of the controller image.
      digest: sha256:90adaba9e8e9f66244324ca64408a5abbfe063f8c41fbbfebf226bdda4fadd58
    # -- Additional environment variables for the controller pod.
    env: []
    # - name: AWS_REGION
    #   value: eu-west-1
    envFrom: []
    # -- Resources for the controller pod.
    resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #  requests:
    #    cpu: 1
    #    memory: 1Gi
    #  limits:
    #    cpu: 1
    #    memory: 1Gi

    # -- Additional volumeMounts for the controller pod.
    extraVolumeMounts: []
    # - name: aws-iam-token
    #   mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
    #   readOnly: true
    # -- Additional sidecarContainer config
    sidecarContainer: []
    # -- Additional volumeMounts for the sidecar - this will be added to the volume mounts on top of extraVolumeMounts
    sidecarVolumeMounts: []
    metrics:
      # -- The container port to use for metrics.
      port: 8000
    healthProbe:
      # -- The container port to use for http health probe.
      port: 8081
  webhook:
    # -- Whether to enable the webhooks and webhook permissions.
    enabled: false
    # -- The container port to use for the webhook.
    port: 8443
    metrics:
      # -- The container port to use for webhook metrics.
      port: 8001
  # -- Global log level, defaults to 'info'
  logLevel: info
  # -- Log configuration (Deprecated: Logging configuration will be dropped by v1, use logLevel instead)
  logConfig:
    # -- Whether to enable provisioning and mounting the log ConfigMap
    enabled: false
    # -- Log outputPaths - defaults to stdout only
    outputPaths:
      - stdout
    # -- Log errorOutputPaths - defaults to stderr only
    errorOutputPaths:
      - stderr
    # -- Log encoding - defaults to json - must be one of 'json', 'console'
    logEncoding: json
    # -- Component-based log configuration
    logLevel:
      # -- Global log level, defaults to 'info'
      global: info
      # -- Controller log level, defaults to 'info'
      controller: info
      # -- Error log level, defaults to 'error'
      webhook: error
  # -- Global Settings to configure Karpenter
  settings:
    # -- The maximum length of a batch window. The longer this is, the more pods we can consider for provisioning at one
    # time which usually results in fewer but larger nodes.
    batchMaxDuration: 10s
    # -- The maximum amount of time with no new ending pods that if exceeded ends the current batching window. If pods arrive
    # faster than this time, the batching window will be extended up to the maxDuration. If they arrive slower, the pods
    # will be batched separately.
    batchIdleDuration: 1s
    # -- Role to assume for calling AWS services.
    assumeRoleARN: ""
    # -- Duration of assumed credentials in minutes. Default value is 15 minutes. Not used unless assumeRoleARN set.
    assumeRoleDuration: 15m
    # -- Cluster CA bundle for TLS configuration of provisioned nodes. If not set, this is taken from the controller's TLS configuration for the API server.
    clusterCABundle: ""
    # -- Cluster name.
    clusterName: ""
    # -- Cluster endpoint. If not set, will be discovered during startup (EKS only)
    clusterEndpoint: ""
    # -- If true then assume we can't reach AWS services which don't have a VPC endpoint
    # This also has the effect of disabling look-ups to the AWS pricing endpoint
    isolatedVPC: false
    # -- The VM memory overhead as a percent that will be subtracted from the total memory for all instance types
    vmMemoryOverheadPercent: 0.075
    # -- Interruption queue is the name of the SQS queue used for processing interruption events from EC2
    # Interruption handling is disabled if not specified. Enabling interruption handling may
    # require additional permissions on the controller service account. Additional permissions are outlined in the docs.
    interruptionQueue: ""
    # -- Reserved ENIs are not included in the calculations for max-pods or kube-reserved
    # This is most often used in the VPC CNI custom networking setup https://docs.aws.amazon.com/eks/latest/userguide/cni-custom-network.html
    reservedENIs: "0"
    # -- Feature Gate configuration values. Feature Gates will follow the same graduation process and requirements as feature gates
    # in Kubernetes. More information here https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/#feature-gates-for-alpha-or-beta-features
    featureGates:
      # -- drift is in BETA and is enabled by default.
      # Setting drift to false disables the drift disruption method to watch for drift between currently deployed nodes
      # and the desired state of nodes set in nodepools and nodeclasses
      drift: true
      # -- spotToSpotConsolidation is ALPHA and is disabled by default.
      # Setting this to true will enable spot replacement consolidation for both single and multi-node consolidation.
      spotToSpotConsolidation: false